name: Publish to NuGet

on:
 push:
 branches:
 - main
 paths:
 - 'Blazor.FlexLoader.csproj'
 - '**/*.cs'
 - '**/*.razor'
 - '**/*.csproj'
 - '!docs/**'
 - '!assets/**'
 - '!.github/**'

env:
 DOTNET_VERSION: '9.0.x'
 PROJECT_PATH: ./Blazor.FlexLoader.csproj
 NUGET_SOURCE: https://api.nuget.org/v3/index.json

jobs:
 publish:
 name: Build & Publish
 runs-on: ubuntu-latest
 permissions:
 contents: read
 steps:
 - name: Checkout
 uses: actions/checkout@v4

 - name: Setup .NET
 uses: actions/setup-dotnet@v4
 with:
 dotnet-version: ${{ env.DOTNET_VERSION }}

 - name: Cache NuGet packages
 uses: actions/cache@v4
 with:
 path: ~/.nuget/packages
 key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
 restore-keys: |
 ${{ runner.os }}-nuget-

 - name: Verify NuGet API key is set
 shell: bash
 run: |
 if [ -z "${{ secrets.NUGET_API_KEY }}" ]; then
 echo "NUGET_API_KEY secret is not set. Configure it in repository Settings > Secrets and variables > Actions."
 exit 1
 fi

 - name: Restore
 run: dotnet restore ${{ env.PROJECT_PATH }}

 - name: Build
 run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore /p:ContinuousIntegrationBuild=true

 - name: Pack
 run: dotnet pack ${{ env.PROJECT_PATH }} -c Release -o ./artifacts /p:ContinuousIntegrationBuild=true

 - name: Publish .nupkg to NuGet.org
 run: |
 dotnet nuget push "./artifacts/*.nupkg" \
 --api-key "${{ secrets.NUGET_API_KEY }}" \
 --source "${{ env.NUGET_SOURCE }}" \
 --skip-duplicate

 - name: Publish .snupkg to NuGet.org (symbols)
 run: |
 dotnet nuget push "./artifacts/*.snupkg" \
 --api-key "${{ secrets.NUGET_API_KEY }}" \
 --source "${{ env.NUGET_SOURCE }}" \
 --skip-duplicate || true

 - name: Upload artifacts
 uses: actions/upload-artifact@v4
 with:
 name: nuget-published-artifacts
 path: ./artifacts/*
 retention-days:7