name: CI

on:
 push:
 branches: [ main, develop ]
 pull_request:
 branches: [ main, develop ]

env:
 DOTNET_VERSION: '9.0.x'
 PROJECT_PATH: ./Blazor.FlexLoader.csproj

jobs:
 ci:
 name: Build & Validate
 runs-on: ubuntu-latest
 steps:
 - name: Checkout repository
 uses: actions/checkout@v4

 - name: Setup .NET
 uses: actions/setup-dotnet@v4
 with:
 dotnet-version: ${{ env.DOTNET_VERSION }}

 - name: Restore dependencies
 run: dotnet restore ${{ env.PROJECT_PATH }}

 - name: Build project
 run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

 - name: Run tests (if any)
 shell: bash
 run: |
 if find . -type f -name "*Tests.csproj" | grep -q .; then
 dotnet test --configuration Release --no-build --verbosity normal
 else
 echo "No test projects found"
 fi

 - name: Create test package
 run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --no-build --output ./test-packages

 - name: Validate package
 shell: bash
 run: |
 echo "Generated packages:"
 ls -la ./test-packages/ || true
 if compgen -G "./test-packages/*.nupkg" > /dev/null; then
 echo "Package created successfully"
 else
 echo "Failed to create package"
 exit 1
 fi

 - name: Upload package artifacts
 uses: actions/upload-artifact@v4
 with:
 name: nuget-packages
 path: ./test-packages/*.nupkg
 retention-days:7

 code-quality:
 name: Code Quality
 runs-on: ubuntu-latest
 steps:
 - name: Checkout repository
 uses: actions/checkout@v4

 - name: Setup .NET
 uses: actions/setup-dotnet@v4
 with:
 dotnet-version: ${{ env.DOTNET_VERSION }}

 - name: Restore dependencies
 run: dotnet restore ${{ env.PROJECT_PATH }}

 - name: Analyze code (treat warnings as errors)
 run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --verbosity normal /p:TreatWarningsAsErrors=true

 documentation:
 name: Documentation Check
 runs-on: ubuntu-latest
 steps:
 - name: Checkout repository
 uses: actions/checkout@v4

 - name: Check README
 shell: bash
 run: |
 if [ ! -f "README.md" ]; then
 echo "README.md is missing"
 exit 1
 fi
 echo "README.md present"

 - name: Check CHANGELOG
 shell: bash
 run: |
 if [ ! -f "CHANGELOG.md" ]; then
 echo "CHANGELOG.md is missing"
 exit 1
 fi
 echo "CHANGELOG.md present"

 - name: Check Documentation
 shell: bash
 run: |
 if [ ! -f "docs/LoaderService-Documentation.md" ]; then
 echo "Detailed documentation is missing"
 exit 1
 fi
 echo "Documentation present"

 - name: Check License
 shell: bash
 run: |
 if [ ! -f "LICENSE" ]; then
 echo "LICENSE is missing"
 exit 1
 fi
 echo "LICENSE present"