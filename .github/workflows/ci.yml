name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_PATH: ./Blazor.FlexLoader.csproj

jobs:
  build-validate:
    name: Build & Validate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Build project
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release --no-restore

      - name: Run tests (if any)
        shell: bash
        run: |
          if find . -type f -name "*Tests.csproj" | grep -q .; then
            dotnet test --configuration Release --no-build --verbosity normal
          else
            echo "No test projects found"
          fi

      - name: Create test package
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration Release --no-build --output ./test-packages

      - name: Validate package
        shell: bash
        run: |
          echo "Generated packages:"
          ls -la ./test-packages/ || true
          if compgen -G "./test-packages/*.nupkg" > /dev/null; then
            echo "✅ Package created successfully"
          else
            echo "❌ Failed to create package"
            exit 1
          fi

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: ./test-packages/*.nupkg
          retention-days: 7

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}

      - name: Check code format
        run: dotnet format --verify-no-changes || echo "Code formatting issues detected"

      - name: Analyze code (warnings as errors)
        run: dotnet build ${{ env.PROJECT_PATH }} --configuration Release /p:TreatWarningsAsErrors=true

  documentation:
    name: Documentation Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check mandatory documentation files
        shell: bash
        run: |
          for f in README.md CHANGELOG.md LICENSE docs/LoaderService-Documentation.md; do
            if [ ! -f "$f" ]; then
              echo "❌ Missing file: $f"
              exit 1
            fi
            echo "✅ $f present"
          done
