@if (LoaderService.IsLoading)
{
    <div class="flexloader-overlay" style="@OverlayStyle" @onclick="OnOverlayClick">
        @if (CustomContent is not null)
        {
            @CustomContent
        }
        else
        {
            <div class="flexloader-content" style="@ContentStyle">
                @if (!string.IsNullOrEmpty(ImagePath))
                {
                    <img src="@ImagePath" alt="Chargement..." style="@ImageStyle" />
                }
                else
                {
                    <!-- SVG loader par défaut -->
                    <div style="@DefaultLoaderStyle">
                        <svg width="80" height="80" viewBox="0 0 80 80" xmlns="http://www.w3.org/2000/svg">
                            <defs>
                                <linearGradient id="flexloader-bg" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" style="stop-color:#512BD4"/>
                                    <stop offset="100%" style="stop-color:#8A2BE2"/>
                                </linearGradient>
                                <linearGradient id="flexloader-ring" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" style="stop-color:#FF6B6B"/>
                                    <stop offset="50%" style="stop-color:#4ECDC4"/>
                                    <stop offset="100%" style="stop-color:#45B7D1"/>
                                </linearGradient>
                            </defs>
                            
                            <!-- Background circle -->
                            <circle cx="40" cy="40" r="35" fill="url(#flexloader-bg)" stroke="#fff" stroke-width="1"/>
                            
                            <!-- Animated loader rings -->
                            <circle cx="40" cy="40" r="26" fill="none" stroke="url(#flexloader-ring)" stroke-width="3" stroke-linecap="round" stroke-dasharray="70 20" opacity="0.9">
                                <animateTransform attributeName="transform" type="rotate" values="0 40 40;360 40 40" dur="2s" repeatCount="indefinite"/>
                            </circle>
                            <circle cx="40" cy="40" r="18" fill="none" stroke="#fff" stroke-width="2" stroke-linecap="round" stroke-dasharray="35 15" opacity="0.7">
                                <animateTransform attributeName="transform" type="rotate" values="360 40 40;0 40 40" dur="1.5s" repeatCount="indefinite"/>
                            </circle>
                            
                            <!-- Center dot -->
                            <circle cx="40" cy="40" r="4" fill="#fff" opacity="0.9"/>
                            
                            <!-- Corner dots -->
                            <circle cx="40" cy="15" r="2" fill="#fff" opacity="0.8">
                                <animate attributeName="opacity" values="0.8;0.3;0.8" dur="1s" repeatCount="indefinite"/>
                            </circle>
                            <circle cx="40" cy="65" r="2" fill="#fff" opacity="0.8">
                                <animate attributeName="opacity" values="0.3;0.8;0.3" dur="1s" repeatCount="indefinite"/>
                            </circle>
                            <circle cx="15" cy="40" r="2" fill="#fff" opacity="0.8">
                                <animate attributeName="opacity" values="0.8;0.3;0.8" dur="1s" repeatCount="indefinite" begin="0.25s"/>
                            </circle>
                            <circle cx="65" cy="40" r="2" fill="#fff" opacity="0.8">
                                <animate attributeName="opacity" values="0.3;0.8;0.3" dur="1s" repeatCount="indefinite" begin="0.25s"/>
                            </circle>
                        </svg>
                    </div>
                }
                @if (!string.IsNullOrEmpty(Text))
                {
                    <p style="@TextStyle">@Text</p>
                }
            </div>
        }
    </div>
}

